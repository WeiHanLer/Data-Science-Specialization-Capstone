#
# This is the server logic of a Shiny web application. You can run the 
# application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
# 
#    http://shiny.rstudio.com/
#

suppressWarnings(library(stringr))
suppressWarnings(library(shiny))

#Load the ngram data matrix into the server

ngram<- readRDS("ngram.RData");

# Prediction function for the app

PredictNext <- function(input){
  inp <- tolower(input)
  inp <- unlist(strsplit(as.character(inp), ' '))
  n <- length(inp) 
  if(n>=3 & nrow(ngram[ngram$gram==word(input,n-2,n),]) > 0){
    select<-ngram[ngram$gram==input,]
    return(as.character(head(select$pred,1)))} 
 else if(n>=2 & nrow(ngram[ngram$gram==word(input,n-1,n),]) > 0){
  select<-ngram[ngram$gram==input,]
  return(as.character(head(select$pred,1)))}
else if(n>=1 & nrow(ngram[ngram$gram==word(input,n,n),]) > 0){
  select<-ngram[ngram$gram==input,]
  return(as.character(head(select$pred,1)))}
else if(nrow(ngram[ngram$gram==word(input,n,n),]) == 0){
  return("No matches found")}
}
  
  
#Shiny output function
  shinyServer(function(input, output) {
    output$prediction <- renderPrint({
      result <- PredictNext(input$inputString)
      result
    });
    
    output$insert <- renderText({
      input$inputString});
  }
  )
